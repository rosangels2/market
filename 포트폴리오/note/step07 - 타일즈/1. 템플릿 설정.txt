선생님 블로그
https://stajun.tistory.com/entry/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC3-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0

타일즈 - jsp include를 편하게 사용

1. pom.xml에서 스프링 프레임워크 버전 변경
예시)5.18버전이 안될 경우 4.3.16버전으로 다운 그레이드
<org.springframework-version>4.3.16.RELEASE</org.springframework-version>

2. pom.xml에서 스프링 버전이 포함된 properties의 가장 밑쪽에 <org.apache.tiles-version>3.0.8</org.apache.tiles-version> 코드를 추가
예시) pom.xml	<org.apache.tiles-version>3.0.8</org.apache.tiles-version>
	<properties>
		<java-version>1.6</java-version>
		<org.springframework-version>4.3.16.RELEASE</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<org.apache.tiles-version>3.0.8</org.apache.tiles-version> 
	</properties>

3. pom.xml의 dependencies 안에 의존성을 추가
예시) pom.xml
<!-- Tiles -->
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-servlet</artifactId>
    <version>${org.apache.tiles-version}</version>
</dependency>
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-api</artifactId>
    <version>${org.apache.tiles-version}</version>
</dependency>
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-jsp</artifactId>
    <version>${org.apache.tiles-version}</version>
</dependency>
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-core</artifactId>
    <version>${org.apache.tiles-version}</version>
</dependency> 
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-template</artifactId>
    <version>${org.apache.tiles-version}</version>
</dependency> 

4. 에러 발생 시 다음 dependency를 추가
예시)
<dependency>
    <groupId>commons-beanutils</groupId>
    <artifactId>commons-beanutils</artifactId>
    <version>1.8.3</version>
</dependency>

5. servlet-context.xml에 등록
예시)
<!-- 타일즈 등록 -->
<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" /><!-- 순서를 우선으로 지정 -->
    </beans:bean>
     
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/spring/tiles-def.xml</beans:value>	<!-- 해당 경로에 있는 tiles-def.xml 파일을 연결-->
            </beans:list>
        </beans:property>
</beans:bean>

6. 연결 경로인 WEB-INF/spring/tiles-def.xml 파일 생성 후 다음 코드 붙여넣기
예시)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tiles-definitions PUBLIC
       "-//Apache Software Foundation//DTD Tiles Configuration 3.0//EN"
       "http://tiles.apache.org/dtds/tiles-config_3_0.dtd">
 
<tiles-definitions>
    <!-- (1) 레이아웃을 적용하지않는화면-->    
    <definition name=".login" template="/WEB-INF/views/layout/loginLayout.jsp">
        <put-attribute name="title" value="" />
        <put-attribute name="header" value="/WEB-INF/views/common/header.jsp" />
        <put-attribute name="menu" value="" />        
        <put-attribute name="footer" value="" />
    </definition>
 
    <!-- (2) 레이아웃을 적용하는화면-->
    <definition name=".root" template="/WEB-INF/views/layout/baseLayout.jsp">
        <put-attribute name="title" value="" />
        <put-attribute name="header" value="/WEB-INF/views/common2/header.jsp" />
        <put-attribute name="menu" value="/WEB-INF/views/common2/menu.jsp" />        
        <put-attribute name="footer" value="/WEB-INF/views/common2/footer.jsp" />
    </definition>
    
    <!-- (1) -->    
    <definition name="/login/*" extends=".login">	<!-- 로그인폴더의 하위 경로인 *을 {1}자리에 넣어서 파일을 찾는다 -->
      <put-attribute name="body" value="/WEB-INF/views/login/{1}.jsp" />	<!-- 경로 /login/*의 *부분을 {1}에 적용 -->
    </definition>
 
    <!-- (2) -->
   <definition name="/*/*" extends=".root">      <!-- extends : 기본은 위의 name을 호출하고 다음 경로를 해당 코드에서 설정한다 -->
      <put-attribute name="body" value="/WEB-INF/views/{1}/{2}.jsp" />	<!-- 경로 /*/*의 *부분을 {1}, {2}에 적용 -->
    </definition>
</tiles-definitions>

7. definition의 경로인 template="/WEB-INF/views/layout/baseLayout.jsp"에 폴더와 jsp파일을 생성 후 코드 붙여넣기
예시)
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="tiles" uri="http://tiles.apache.org/tags-tiles"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
 
<html>
<head>
<title>Explosion</title>
​
</head>
<body class="wrapper">
    <nav class="navbar navbar-default navbar-static-top" role="navigation" style="margin-bottom: 0">        
        <tiles:insertAttribute name="header"/>        
        <tiles:insertAttribute name="menu" />    
    </nav>
     <div id="page-wrapper">
             <div class="row">
                <div class="col-lg-12">    
                    <h1 class="page-header">${setHeader}</h1>
                </div>
            </div>
            <div class="row">                 
                <tiles:insertAttribute name="body" />                                                  
            </div>
          
     </div>
    <div class="main_footer">
        <div class="main_footer-inner">
            <tiles:insertAttribute name="footer" />
        </div>
    </div>
</body>
</html>

8. 설정한 경로에 맞게 폴더와 파일들을 생성 후 코드 추가
경로)
        <put-attribute name="header" value="/WEB-INF/views/common2/header.jsp" />
        <put-attribute name="menu" value="/WEB-INF/views/common2/menu.jsp" />        
        <put-attribute name="footer" value="/WEB-INF/views/common2/footer.jsp" />

예시) footer.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="tiles" uri="http://tiles.apache.org/tags-tiles"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<div style="color:blue;">푸터</div>

9. 컨트롤러에 메서드를 추가
예시)HomeController
    @RequestMapping(value= "/")
    public ModelAndView openTilesView(ModelAndView mv) throws Exception{
        mv.setViewName("/main/home");	//타일즈를 통해 불러올 jsp 경로
        mv.addObject("setHeader", "타일즈");
        return mv;
    }
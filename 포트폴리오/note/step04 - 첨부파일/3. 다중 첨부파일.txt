게시글 등록

1. 첨부파일 첨부를 통해 첨부파일 인풋창의 내용이 변경되면 인풋창을 새로 추가하는 함수를 ready함수 밖에서 생성하고 ready함수 안에서 호출
예시) board/register.jsp
	<script type="text/javascript">
		$(document).ready(function(){
			addInputEvent();
		})
		function addInputEvent(){
			$('input[name=file2]').change(function(){
				var str = '<input type="file" class="form-control" name="file2" value="">'
				$(this).after(str);
				addInputEvent();
			})
		}
	</script>

2. name이 file2인 인풋창들의 입력값들을 컨트롤러에서 배열로 전송받아 사용
예시)
	@RequestMapping(value="register", method=RequestMethod.POST)
	public String boardRegisterPost(MultipartFile[] file2,BoardVO boardVo) throws IOException, Exception {

		return "redirect:/board/list";
	}

3. 객체 boardVO를 DB에 insert문으로 등록하고 게시글 번호를 반환하는 서비스 호출 후 게시글 번호를 변수에 저장
예시)
	@RequestMapping(value="register", method=RequestMethod.POST)
	public String boardRegisterPost(MultipartFile[] file2,BoardVO boardVo) throws IOException, Exception {
		int num = boardService.registerBoard(boardVo);
		return "redirect:/board/list";
	}

4. quick fixed를 통해 서비스 인터페이스를 생성
예시)
	int registerBoard(BoardVO boardVo);

5. quick fixed를 통해 서비스 인터페이스를 구현하고  DAO 인터페이스를 호출해 게시글을 등록한 뒤 마지막으로 등록된 게시글 번호를 가져오는 DAO 인터페이스를 호출하여 반환
예시)
	@Override
	public int registerBoard(BoardVO boardVo) {
		boardDao.registerBoard(boardVo);
		return boardDao.getMaxBoardNum();
		 
	}

6. quick fixed를 통해 DAO 인터페이스를 생성
예시)
	int getMaxBoardNum();

7. BoardMapper.xml에서 select문으로 DAO 인터페이스를 연결
예시)
	<select id="getMaxBoardNum" resultType="int">
  		select max(num) from board;
	</select>

8. 향상된 for문으로 배열을 하나씩 꺼내 파일을 업로드한 뒤 파일 경로를 문자열에 저장하고 서비스 인터페이스를 호출
예시) BoardController
	@RequestMapping(value="register", method=RequestMethod.POST)
	public String boardRegisterPost(MultipartFile[] file2,BoardVO boardVo) throws IOException, Exception {
		int num = boardService.registerBoard(boardVo);
		for(MultipartFile tmp : file2)
			if(tmp.getOriginalFilename().length() != 0) {
				String file = UploadFileUtils.uploadFile(uploadPath, tmp.getOriginalFilename(),tmp.getBytes());
				boardService.addFile(file,num);
			}
		return "redirect:/board/list";
	}

9. quick fixed를 통해 서비스 인터페이스를 생성
예시)
	void addFile(String file, int num);

10. quick fixed를 통해 서비스 인터페이스를 구현하고 DAO 인터페이스를 호출
예시)
	@Override
	public void addFile(String file, int num) {
		boardDao.insertFile(file,num);
	}

11. quick fixed를 통해 DAO 인터페이스를 생성
예시)
	void insertFile(@Param("file")String file, @Param("num")int num);

12. BoardMapper.xml에서 DAO 인터페이스를 연결하는 쿼리문 구현
예시)
  	<insert id="insertFile">
  		insert into file(board_num,name) values(#{num},#{file})
 	 </insert>





+ 게시글 보기

13. 첨부파일 정보를 한번에 가져오기 위해 FileVO를 생성
예시)
public class FileVO {
	private int num;//첨부파일 번호 : 자동 증가
	private int board;//게시글 번호
	private String name;//파일 경로 및 이름
	private String state;//파일 상태(I:게시, D:삭제)
	
	public int getNum() {
		return num;
	}
	public void setNum(int num) {
		this.num = num;
	}
	public int getBoard() {
		return board;
	}
	public void setBoard(int board) {
		this.board = board;
	}
	public String getName() {
		return name;
	}
	public String getFileName() {
		if(name == null)
			return "";
		int index = name.indexOf("_");
		return name.substring(index+1);
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getState() {
		return state;
	}
	public void setState(String state) {
		this.state = state;
	}

14. BoardController의 display 메서드에서 파일 정보를 가져오는 서비스 인터페이스를 호출해 ArrayList 변수에 저장
예시)
	@RequestMapping(value="/display", method=RequestMethod.GET)
	public String boardDisplayGet(Model model, Integer num) {
		boardService.updateViews(num);
		BoardVO bVo = boardService.getBoard(num);
		ArrayList<FileVO> files = boardService.getFiles(num);
		model.addAttribute("board", bVo);
		return "board/display";
	}

15. quick fixed를 통해 서비스 인터페이스를 생성
예시)
	ArrayList<FileVO> getFiles(Integer num);

16. quick fixed를 통해 서비스 인터페이스를 구현하고 DAO 인터페이스를 호출
예시)
	@Override
	public ArrayList<FileVO> getFiles(Integer num) {
		return boardDao.selectFileList(num);
	}

17. quick fixed를 통해 DAO 인터페이스를 생성
예시)
	ArrayList<FileVO> selectFileList(Integer num);

18. BoardMapper.xml에서 select문으로 파일 정보를 검색해 FileVO클래스 ArrayList로 반환
예시)
  	<select id="selectFileList" resultType="kr.green.spring.vo.FileVO">
  		select * from file where board = #{num}
 	 </select>

19. BoardController에서 서비스 인터페이스의 결과가 제대로 반환됐는지 확인한 후 model의 변수에 담아 jsp로 전송
예시)
	@RequestMapping(value="/display", method=RequestMethod.GET)
	public String boardDisplayGet(Model model,Integer num) {
		//조회수 증가
		boardService.updateViews(num);
		BoardVO bVo = boardService.getBoard(num);
		ArrayList<FileVO> files = boardService.getFiles(num);
		model.addAttribute("board", bVo);
		model.addAttribute("files", files);
		return "board/display";
	}

20. 배열로 전달받은 변수를 하나씩 꺼내 display.jsp에서 for:each문으로 나열
예시)
		<div class="form-group">
		  <label>첨부파일</label><br>
		  <c:forEach items="${files}" var="file">
		  	<a target="_blank" href="<%=request.getContextPath()%>/board/download?fileName=${file.name}">${file.fileName}</a><br>
		  </c:forEach>
		</div>





display.jsp 전체 예시
예시)
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<jsp:include page="/WEB-INF/views/common/header.jsp"></jsp:include>
<title>Insert title here</title>
</head>
<body>
	<jsp:include page="/WEB-INF/views/common/nav.jsp"></jsp:include>
	<div class="container-fluid" style="margin-top:80px;">
		<div class="form-group">
		  <label for="title">제목</label>
		  <input type="text" class="form-control" name="title" value="${board.title}" readonly>
		</div>
		<div class="form-group">
		  <label for="title">작성자</label>
		  <input type="text" class="form-control" name="writer" value="${board.writer}" readonly>
		</div>
		<div class="form-group">
		  <label>등록일</label>
		  <input type="text" class="form-control" name="registered" value="${board.registered}" readonly>
		</div>
		<div class="form-group">
		  <label>조회수</label>
		  <input type="text" class="form-control" name="views" value="${board.views}" readonly>
		</div>
		<div class="form-group">
		  <label>내용</label>
		  <textarea rows="10" class="form-control" name="contents" readonly>${board.contents }</textarea>
		</div>
		<div class="form-group">
		  <label>첨부파일</label><br>
		  <c:forEach items="${files}" var="file">
		  	<a target="_blank" href="<%=request.getContextPath()%>/board/download?fileName=${file.name}">${file.fileName}</a><br>
		  </c:forEach>
		  
		</div>
		<a href="<%=request.getContextPath()%>/board/list">
			<button type="button" class="btn btn-outline-success">목록</button>
		</a>
		<a href="<%=request.getContextPath()%>/board/register">
			<button type="button" class="btn btn-outline-success">등록</button>
		</a>
		<c:if test="${user.id eq board.writer }">
			<a href="<%=request.getContextPath()%>/board/modify?num=${board.num}">
				<button type="button" class="btn btn-outline-success">수정</button>
			</a>
		</c:if>
		<c:if test="${user.id eq board.writer }">
			<a href="<%=request.getContextPath()%>/board/delete?num=${board.num}">
				<button type="button" class="btn btn-outline-success">삭제</button>
			</a>
		</c:if>
	</div>
	
</body>
</html>
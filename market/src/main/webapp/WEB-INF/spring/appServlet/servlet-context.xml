<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="kr.green.market" />
	
	<!-- 타일즈 등록 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	        <beans:property name="order" value="1" /><!-- 순서를 우선으로 지정 -->
	    </beans:bean>
	     
	    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	        <beans:property name="definitions">
	            <beans:list>
	                <beans:value>/WEB-INF/spring/tiles-def.xml</beans:value>	<!-- 해당 경로에 있는 tiles-def.xml 파일을 연결 -->
	            </beans:list>
	        </beans:property>
	</beans:bean>
	
	<!-- 로그인 정보를 저장할 인터셉터 등록 -->
	<beans:bean id="loginInterceptor" 
		class="kr.green.market.interceptor.LoginInterceptor">
	</beans:bean>	<!-- 패키지명.클래스명 -->
	
	<!-- 로그인이 안됐을 때 접근을 막는 인터셉터 등록 -->
	<beans:bean id="authInterceptor" 
		class="kr.green.market.interceptor.AuthInterceptor">		<!-- 패키지명.클래스명 -->
	</beans:bean>			
	
	<!-- 로그인이 됐을 때 접근을 막는 인터셉터 등록 -->
	<beans:bean id="unAuthInterceptor" 
		class="kr.green.market.interceptor.UnauthInterceptor">
	</beans:bean>	
	
		<interceptors>
		
			<!-- 로그인 정보를 저장할 경로 -->
			<interceptor>
				<mapping path="/signin"/>	<!-- URI 경로에 맞는 인터셉터를 실행	-->
				<beans:ref bean="loginInterceptor"/>	<!-- 위쪽 beans의 id와 일치해야 한다 -->
			</interceptor>
			
			<!-- 로그인이 안됐을 때 접근 제한 -->
		   	<interceptor>
			       	<mapping path="/items/modify"/>	<!--	<mapping path="/"/>	 URI 경로에 맞는 인터셉터를 실행		-->
			       	<mapping path="/items/register"/>
			       	<mapping path="/items/administration"/>
			       	<mapping path="/items/order"/>
			       	<mapping path="/myMenu"/>
			     	<beans:ref bean="authInterceptor"/>		<!-- 위쪽 beans의 id와 일치해야 한다 -->
			</interceptor>
			
			<!-- 로그인이 됐을 때 접근 제한 -->
			<interceptor>
		      		 <mapping path="/signin"/>	<!--	<mapping path="/"/>	 URI 경로에 맞는 인터셉터를 실행		-->
		      		 <mapping path="/signup"/>
		    		 <beans:ref bean="unAuthInterceptor"/>		<!-- 위쪽 beans의 id와 일치해야 한다 -->
			</interceptor>	
				
		</interceptors>
	
</beans:beans>
